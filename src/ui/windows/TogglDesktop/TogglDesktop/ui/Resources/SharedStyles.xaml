<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ImageBrush x:Key="ViewBackground"
        ImageSource="/TogglDesktop;component/Resources/bg-pattern.png"
        AlignmentX="Left" AlignmentY="Top"
        TileMode="Tile" Stretch="UniformToFill"
        Viewport="0 0 600 800" ViewportUnits="Absolute"/>
    <ImageBrush x:Key="ViewBackgroundLight"
        ImageSource="/TogglDesktop;component/Resources/timerLightBg.png"
        AlignmentX="Left" AlignmentY="Top"
        TileMode="Tile" Stretch="UniformToFill"
        Viewport="0 0 634 822" ViewportUnits="Absolute"/>

    <FontFamily x:Key="DefaultFont">Segoe UI</FontFamily>

    <sys:Double x:Key="TimerHeight">68</sys:Double>
    <sys:Double x:Key="TabsHeight">40</sys:Double>

    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="13.3" />
        <Setter Property="Foreground" Value="#252525"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>

    <Style TargetType="Border" x:Key="Toggl.Border.Hoverable">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.TextBox.Border}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.TextBox.MouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.LightGrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SyncingIndicatorCount" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#757575"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#757575"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextButton" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Height="1" Fill="{TemplateBinding Foreground}" VerticalAlignment="Bottom" />

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}">

                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground"
                                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                    <Setter Property="FontSize"
                                        Value="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="RoundedCornersButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}">

                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground"
                                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                    <Setter Property="FontSize"
                                        Value="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="RaisedButton" TargetType="Button" BasedOn="{StaticResource RoundedCornersButtonBase}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eaeaea"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#d6d6d6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#77000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatButton" TargetType="Button" BasedOn="{StaticResource RoundedCornersButtonBase}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#33999999"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#66999999"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#77000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
